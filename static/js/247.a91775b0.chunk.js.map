{"version":3,"file":"static/js/247.a91775b0.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BO,IAFjD,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKM,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,uFACkBP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,EAA9B,oBAA4CT,IAD9D,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE,+IC9BQ,SAASQ,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOJ,EAAP,KAAaK,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAO,mCAAG,WAAMF,GAAN,0EACTA,EADS,2EAIOR,EAAAA,EAAAA,IAAYQ,GAJnB,OAINN,EAJM,OAKZK,EAAQL,GALI,gDAOZS,QAAQC,IAAR,MAPY,yDAAH,sDAeb,OAJAC,EAAAA,EAAAA,YAAU,WACRH,EAAQF,EACT,GAAE,CAACA,KAGF,SAAC,EAAAM,SAAD,WACE,+BACGZ,QADH,IACGA,OADH,EACGA,EAAMa,KAAI,SAAAC,GACT,IAAQC,EAAmDD,EAAnDC,UAAWC,EAAwCF,EAAxCE,KAAoBC,EAAoBH,EAAlCI,aAA2BnB,EAAOe,EAAPf,GACpD,OACE,2BACE,gBACEoB,IAAG,0CAAqCF,GACxCG,IAAKJ,EACLK,MAAM,SAER,4BACE,uBAAIL,KACJ,uBAAID,SARChB,EAYZ,OAIR,C","sources":["api/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '931e7fb1a09f8bcd023c19a0e53dc26e';\n\nexport async function trendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function movieQuerySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function creditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function movieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function reviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { creditsById } from 'api/Api';\nimport { Suspense } from 'react';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n\n  const { movieId } = useParams();\n\n  const getCast = async movieId => {\n    if (!movieId) return;\n\n    try {\n      const cast = await creditsById(movieId);\n      setCast(cast);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCast(movieId);\n  }, [movieId]);\n\n  return (\n    <Suspense>\n      <ul>\n        {cast?.map(actor => {\n          const { character, name, profile_path: profilePath, id } = actor;\n          return (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${profilePath}`}\n                alt={name}\n                width=\"120\"\n              />\n              <div>\n                <p>{name}</p>\n                <p>{character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </Suspense>\n  );\n}\n"],"names":["BASE_URL","API_KEY","trendingMovies","axios","response","data","results","movieQuerySearch","query","creditsById","id","cast","movieById","reviewsById","Cast","useState","setCast","movieId","useParams","getCast","console","log","useEffect","Suspense","map","actor","character","name","profilePath","profile_path","src","alt","width"],"sourceRoot":""}