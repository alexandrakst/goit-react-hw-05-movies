{"version":3,"file":"static/js/186.5e6548eb.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BO,IAFjD,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKM,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,uFACkBP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,EAA9B,oBAA4CT,IAD9D,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE,+IC9BQ,SAASQ,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAU,mCAAG,WAAMF,GAAN,0EACZA,EADY,2EAIOL,EAAAA,EAAAA,IAAYK,GAJnB,OAITF,EAJS,OAKfC,EAAWD,GALI,gDAOfK,QAAQC,IAAR,MAPe,yDAAH,uDAWhBC,EAAAA,EAAAA,YAAU,WACRH,EAAWF,EACZ,GAAE,CAACA,IAEJ,IAAMM,EAAYR,GAA8B,IAAnBA,EAAQS,OAErC,OACE,SAAC,EAAAC,SAAD,WACE,wBACGF,EACCR,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASnB,EAApB,EAAoBA,GAApB,OACV,2BACE,kCAAUkB,MACV,uBAAIC,MAFGnB,EADC,KAOZ,uEAKT,C","sources":["api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '931e7fb1a09f8bcd023c19a0e53dc26e';\n\nexport async function trendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function movieQuerySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function creditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function movieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function reviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { reviewsById } from 'api/Api';\nimport { Suspense } from 'react';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n\n  const { movieId } = useParams();\n\n  const getReviews = async movieId => {\n    if (!movieId) return;\n\n    try {\n      const reviews = await reviewsById(movieId);\n      setReviews(reviews);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getReviews(movieId);\n  }, [movieId]);\n\n  const isReviews = reviews && reviews.length !== 0;\n\n  return (\n    <Suspense>\n      <ul>\n        {isReviews ? (\n          reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <p>User: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </Suspense>\n  );\n}\n"],"names":["BASE_URL","API_KEY","trendingMovies","axios","response","data","results","movieQuerySearch","query","creditsById","id","cast","movieById","reviewsById","Reviews","useState","reviews","setReviews","movieId","useParams","getReviews","console","log","useEffect","isReviews","length","Suspense","map","author","content"],"sourceRoot":""}