{"version":3,"file":"static/js/528.6208bf42.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BO,IAFjD,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKM,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,uFACkBP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,EAA9B,oBAA4CT,IAD9D,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE,8IClCP,GAAiB,E,SCGF,SAASQ,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEH,UAAWC,EAAAA,KACXG,GAAE,kBAAaD,EAAMX,IACrBa,MAAOP,EAHT,SAKGK,EAAMG,SANFH,EAAMX,GADA,KAatB,CCjBc,SAASe,IAAU,IAAD,EAC/B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOX,EAAP,KAAec,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAmChD,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEA7B,EAAAA,EAAAA,IAAiB0B,GAFjB,OAEflB,EAFe,OAGrBc,EAAUd,GAHW,gDAKrBsB,QAAQC,IAAR,MALqB,yDAAH,qDAStBF,GACD,GAAE,CAACH,KAGF,+BACE,UAAC,EAAAM,SAAD,CAAUC,UAAU,uCAApB,WACE,kBAAMC,SA/BK,SAAAC,GALS,IAAAlC,GAMxBkC,EAAEC,iBACGhB,IALLK,EAD6B,MADLxB,EAYNmB,GAXgB,CAAEnB,MAAAA,GAAU,CAAC,GAY/CoB,EAAc,KALZgB,MAAM,6CAMT,EAsBK,WACE,kBAAOC,KAAK,OAAOC,MAAOnB,EAAYoB,SArB7B,SAAAL,GACfd,EAAcc,EAAEM,OAAOF,MACxB,KAoBO,mBAAQD,KAAK,SAAb,uBAEU,OAAX9B,GAAqC,IAAlBA,EAAOkC,SACzB,SAACnC,EAAD,CAAWC,OAAQA,QAK5B,C","sources":["api/Api.js","components/MovieList/MoviesList.module.css","components/MovieList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '931e7fb1a09f8bcd023c19a0e53dc26e';\n\nexport async function trendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function movieQuerySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function creditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function movieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function reviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            className={css.link}\n            to={`/movies/${movie.id}`}\n            state={location}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { movieQuerySearch } from 'api/Api';\nimport MovieList from '../../components/MovieList/MoviesList';\n\nexport default function Movies() {\n  const [inputValue, setInputValue] = useState('');\n  const [movies, setMovies] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!inputValue) {\n      alert('Please enter a search query to fing movies');\n      return;\n    }\n\n    updateQueryString(inputValue);\n    setInputValue('');\n  };\n\n  const onChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  useEffect(() => {\n    const getMoviesByQuery = async () => {\n      try {\n        const movies = await movieQuerySearch(movieQuery);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMoviesByQuery();\n  }, [movieQuery]);\n\n  return (\n    <>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <form onSubmit={onSubmit}>\n          <input type=\"text\" value={inputValue} onChange={onChange} />\n          <button type=\"submit\">search</button>\n        </form>\n        {movies !== null && movies.length !== 0 && (\n          <MovieList movies={movies}></MovieList>\n        )}\n      </Suspense>\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","trendingMovies","axios","response","data","results","movieQuerySearch","query","creditsById","id","cast","movieById","reviewsById","MovieList","movies","location","useLocation","className","css","map","movie","to","state","title","Movies","useState","inputValue","setInputValue","setMovies","useSearchParams","searchParams","setSearchParams","movieQuery","get","useEffect","getMoviesByQuery","console","log","Suspense","fallback","onSubmit","e","preventDefault","alert","type","value","onChange","target","length"],"sourceRoot":""}