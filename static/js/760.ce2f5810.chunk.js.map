{"version":3,"file":"static/js/760.ce2f5810.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BO,IAFjD,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKM,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,uFACkBP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,EAA9B,oBAA4CT,IAD9D,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,IAFvC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE,8IClCP,EAA4B,8BAA5B,EAA+D,uBAA/D,EAA6F,yB,SCG9E,SAASQ,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,gBAAIH,UAAWC,EAAf,WACE,gBACEG,IAAG,yCAAoCD,EAAME,eAC7CC,IAAKH,EAAMI,SAEb,SAAC,KAAD,CACEP,UAAWC,EACXO,GAAE,kBAAaL,EAAMX,IACrBiB,MAAOX,EAHT,SAKGK,EAAMI,UAViBJ,EAAMX,GADnB,KAiBtB,CCzBD,MAA6B,2BAA7B,EAAsE,4BAAtE,EAA8G,0BCK/F,SAASkB,IAAU,IAAD,EAC/B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOd,EAAP,KAAeiB,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAmChD,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEAhC,EAAAA,EAAAA,IAAiB6B,GAFjB,OAEfrB,EAFe,OAGrBiB,EAAUjB,GAHW,gDAKrByB,QAAQC,IAAR,MALqB,yDAAH,qDAStBF,GACD,GAAE,CAACH,KAGF,+BACE,UAAC,EAAAM,SAAD,CAAUC,UAAU,uCAApB,WACE,kBAAMzB,UAAWC,EAAgByB,SA/BtB,SAAAC,GALS,IAAArC,GAMxBqC,EAAEC,iBACGhB,IALLK,EAD6B,MADL3B,EAYNsB,GAXgB,CAAEtB,MAAAA,GAAU,CAAC,GAY/CuB,EAAc,KALZgB,MAAM,6CAMT,EAsBK,WACE,kBACE7B,UAAWC,EACX6B,KAAK,OACLC,MAAOnB,EACPoB,SAzBO,SAAAL,GACfd,EAAcc,EAAEM,OAAOF,MACxB,KAyBO,mBAAQ/B,UAAWC,EAAe6B,KAAK,SAAvC,uBAIU,OAAXjC,GAAqC,IAAlBA,EAAOqC,SACzB,SAACtC,EAAD,CAAWC,OAAQA,QAK5B,C","sources":["api/Api.js","webpack://react-homework-template/./src/components/MovieList/MoviesList.module.css?7a3b","components/MovieList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '931e7fb1a09f8bcd023c19a0e53dc26e';\n\nexport async function trendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function movieQuerySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function creditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n}\n\nexport async function movieById(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function reviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__IROBh\",\"li\":\"MoviesList_li__0JIOm\",\"link\":\"MoviesList_link__5UpDO\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => (\n        <li className={css.li} key={movie.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.backdrop_path}`}\n            alt={movie.title}\n          />\n          <Link\n            className={css.link}\n            to={`/movies/${movie.id}`}\n            state={location}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesForm\":\"Movies_moviesForm__Yo2Oo\",\"moviesInput\":\"Movies_moviesInput__UOzRX\",\"moviesBtn\":\"Movies_moviesBtn__bJE3E\"};","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { movieQuerySearch } from 'api/Api';\nimport MovieList from '../../components/MovieList/MoviesList';\nimport css from './Movies.module.css';\n\nexport default function Movies() {\n  const [inputValue, setInputValue] = useState('');\n  const [movies, setMovies] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!inputValue) {\n      alert('Please enter a search query to fing movies');\n      return;\n    }\n\n    updateQueryString(inputValue);\n    setInputValue('');\n  };\n\n  const onChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  useEffect(() => {\n    const getMoviesByQuery = async () => {\n      try {\n        const movies = await movieQuerySearch(movieQuery);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMoviesByQuery();\n  }, [movieQuery]);\n\n  return (\n    <>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <form className={css.moviesForm} onSubmit={onSubmit}>\n          <input\n            className={css.moviesInput}\n            type=\"text\"\n            value={inputValue}\n            onChange={onChange}\n          />\n          <button className={css.moviesBtn} type=\"submit\">\n            Search\n          </button>\n        </form>\n        {movies !== null && movies.length !== 0 && (\n          <MovieList movies={movies}></MovieList>\n        )}\n      </Suspense>\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","trendingMovies","axios","response","data","results","movieQuerySearch","query","creditsById","id","cast","movieById","reviewsById","MovieList","movies","location","useLocation","className","css","map","movie","src","backdrop_path","alt","title","to","state","Movies","useState","inputValue","setInputValue","setMovies","useSearchParams","searchParams","setSearchParams","movieQuery","get","useEffect","getMoviesByQuery","console","log","Suspense","fallback","onSubmit","e","preventDefault","alert","type","value","onChange","target","length"],"sourceRoot":""}